<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAC
        wwAAAsMBCdU7dAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAdzSURBVHhe7Z05
        z9xUGIVHInSQ0AAdhCpBYvsTIEAgKhRKIKw/gNCihIICiBCkQGERWxEKloLwGwhikUhIBQhosjQsFQIC
        54x0h5PJGY3tz/Ph9973kZ7mtb/rN/bJjD0zvp6tYC98Fn4Oz8B/Ju4f8Gd4HD4Bd8Kx4Zgcm9vgtrhN
        18uU5LHjMTwE98C17IKvw7+gGzCK5+BjcCx44M9Dt60o8pgehSv/c9wAv4Xuj6P6BrwMDmUHfBO6saN6
        Cu6GF3ElPAndH0T3MBzKS9CNGd3T8Cq4gC/7bsVavAP25U7oxqpFvh3MuRFGf89f51ewL19DN1Yt8pjz
        ZH9+tu9WqM1bYFdug26M2jwI55cJbmFtPgW7cgC6MWrzBJxfMrmFxf1wK2fS28EV8CPo+i8egV3hum6M
        4geQ25wyPGaPQNd/8SycXZCCc+oHv/AAdP0Xj8GucF03RnEfjACPneu/yGNvF6hRuB+6/ovvw65wXTdG
        kduKgutftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tf
        tUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkA
        j+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1ChkAj+tftUU1
        ChkAj+tftUU1ChkAj+tftUU1ChkAj+tfXTvRAe8cjsDD0PVffBd2pakA/LhUWJZ33PCmC/6jpyoP/g/Q
        9V98HnalqQB8ulSo1YdgV5oKAKc/cQtqkrdCXw270lQAeJNjhImgtuJbsA9NBYBwQiW3sAZ/gdfBPjQX
        AMIJldwKkeVL/92wL00GgLcSPwfdShH9Dd4Hh9BkAAqcUIlz6riVI8j/9W/Dvi/7StMBKHBOHU6r8jLk
        Dpmy/JDnBfgg7HO2vwqO6XZWsYkAtEwGoHEyAI2TAWicDEDjZAAaJwPQOBmAxskANE4GoHEyAOBW+DR8
        BXKHTNn34IuQv/q5Bm4Vjul2VrHqAPBJGZEflsAvg96B18OhNBmA2r4O/h3m18G+f3VBbU/Honw1uAf2
        pbkA1PzD0F9h37eDpgLAGz/45Ai3sBZ5TtCHpgLw5FKhRvlW0OfqoKkAtHJjCO8e6kpTAVh3axgfkDT1
        W8N4/f89dP0X89Yw79qbQ6f+dKxC3hzqcf2rtqhGgQfF9V/kQe1KBkCMQgbA4/pXbVGNwpgB4HcLboxi
        nzuN/094ie/6L/Lt3y5QozBmAHiPgRujyBNOnnNwm1OVJ+4fQ9d/kRcAdoEaBf6jXf/FPgFYd0JZi8eh
        XaBGYcwA8EMjfnjkxqnJx6FdoEZhzAAQfnzsxqlFPjR8J7QL1SiMHQB+gcQvktxYNcgni89xC9UojB0A
        wq+Sa3wreA0ucCuoUdhEAAh/IcVZRtyYEX0V7oAL3EpqFDYVAMK3A54TRH41+ALeDi/BraxGYZMBKHDu
        AX4IxM8J+N0Cx5yynNuBczzcDFfidpYahe0IQJW4naVGIQMwELez1ChkAAbidpYahQzAQNzOUqOQARiI
        21lqFDIAA3E7S41CBmAgbmepUcgADMTtLDUKGYCBuJ2lRiEDMBC3s9QobEcA+EMR/lqIcxHwd4Mcc8py
        bocDkNP+rsTtLDUKmwzAbsjP/v+GbuwIfgk5EfgluJXVKGwqAHfB2r4OvhwucCupUdhEAO6Fkf/Xr5IP
        B1ngVlCjMHYA+LLPh064sWqQjwma4xaqURg7AOtuDonueZg/Cl3BtbDGl/5lOTOMXaBGYcwA7IdujNrM
        G0NWsO7WsO8gfxrGbU5V3hr2IXT9F/PWsBXkzaFiFMYMANd1YxS5rSi4/lVbVKOQAfC4/lVbVKOQAfC4
        /lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQ
        AfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVb
        VKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4/lVbVKOQAfC4
        /tXZhaXCsnysfAR4I4Trv3gMdoXrujGK+2AEeOxc/0Ue+/mTI9zC4qNw6iHgDRDrHpB0BHaF67oxirzj
        htucMjxmvAPY9V/kQ8NnJ6RQs5w1uyucVsWNUZufwdlBKdTsTbArnFPHjVGbz8DZHlj7E7L4sIS+cE4d
        N1Yt/gl57OcchW6lWrRPylgDJ1RyY9Ui5wpawBOab6BbMbp9Hhu/zGHoxozuabgLXgTnxDkF3R9ElU/H
        2soVDP+WEyq5saN6EvJYWzhnDN8Oop8T8PJm8Vy8EeDl1LrL5anL93y+7He6fN0LD0FeIp6BbsApyYkO
        foKfQD4OdRPX6PzPwTl1uA1ui9t0vUxJHjseQ17pLU74/mM2+xdnAxLfRMgB/AAAAABJRU5ErkJggg==
</value>
  </data>
</root>